"""empty message

Revision ID: be3b25264f34
Revises: b21d29e4d8aa
Create Date: 2025-04-27 00:11:10.096025

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'be3b25264f34'
down_revision = 'b21d29e4d8aa'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('harvests', schema=None) as batch_op:
        batch_op.alter_column('last_updated',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
        batch_op.create_index(batch_op.f('ix_harvests_status'), ['status'], unique=False)
        batch_op.drop_constraint('harvests_greenhouse_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('harvests_user_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('harvests_plant_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'planted_crops', ['plant_id'], ['plant_id'], ondelete='CASCADE')
        batch_op.create_foreign_key(None, 'greenhouses', ['greenhouse_id'], ['greenhouse_id'], ondelete='CASCADE')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['user_id'], ondelete='CASCADE')

    with op.batch_alter_table('reason_for_rejection', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_reason_for_rejection_status'), ['status'], unique=False)

    with op.batch_alter_table('sales', schema=None) as batch_op:
        batch_op.add_column(sa.Column('harvest_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('rejection_id', sa.Integer(), nullable=True))
        batch_op.alter_column('originalPrice',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
        batch_op.create_index(batch_op.f('ix_sales_harvest_id'), ['harvest_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_sales_rejection_id'), ['rejection_id'], unique=False)
        batch_op.drop_constraint('sales_plant_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'reason_for_rejection', ['rejection_id'], ['rejection_id'], ondelete='SET NULL')
        batch_op.create_foreign_key(None, 'harvests', ['harvest_id'], ['harvest_id'], ondelete='SET NULL')
        batch_op.drop_column('plant_id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('sales', schema=None) as batch_op:
        batch_op.add_column(sa.Column('plant_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('sales_plant_id_fkey', 'planted_crops', ['plant_id'], ['plant_id'], ondelete='CASCADE')
        batch_op.drop_index(batch_op.f('ix_sales_rejection_id'))
        batch_op.drop_index(batch_op.f('ix_sales_harvest_id'))
        batch_op.alter_column('originalPrice',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
        batch_op.drop_column('rejection_id')
        batch_op.drop_column('harvest_id')

    with op.batch_alter_table('reason_for_rejection', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_reason_for_rejection_status'))

    with op.batch_alter_table('harvests', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('harvests_plant_id_fkey', 'planted_crops', ['plant_id'], ['plant_id'])
        batch_op.create_foreign_key('harvests_user_id_fkey', 'users', ['user_id'], ['user_id'])
        batch_op.create_foreign_key('harvests_greenhouse_id_fkey', 'greenhouses', ['greenhouse_id'], ['greenhouse_id'])
        batch_op.drop_index(batch_op.f('ix_harvests_status'))
        batch_op.alter_column('last_updated',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)

    # ### end Alembic commands ###
