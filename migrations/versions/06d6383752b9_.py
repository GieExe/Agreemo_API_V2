"""empty message

Revision ID: 06d6383752b9
Revises: 3c908374bf15
Create Date: 2025-04-15 11:40:43.236208

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '06d6383752b9'
down_revision = '3c908374bf15'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('harvests', schema=None) as batch_op:
        batch_op.add_column(sa.Column('plant_name', sa.String(), nullable=False))
        batch_op.add_column(sa.Column('price', sa.Float(), nullable=False))

    with op.batch_alter_table('inventory_container_logs', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.Integer(), nullable=False))
        batch_op.alter_column('item',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['user_id'])

    with op.batch_alter_table('inventory_logs', schema=None) as batch_op:
        batch_op.add_column(sa.Column('inventory_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('user_id', sa.Integer(), nullable=False))
        batch_op.drop_constraint('inventory_logs_inventory_container_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'inventory', ['inventory_id'], ['inventory_id'])
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['user_id'])
        batch_op.drop_column('quantity')
        batch_op.drop_column('inventory_container_id')
        batch_op.drop_column('item')

    with op.batch_alter_table('nutrient_controllers', schema=None) as batch_op:
        batch_op.add_column(sa.Column('plant_name', sa.String(), nullable=False))
        batch_op.drop_constraint('nutrient_controllers_user_id_fkey', type_='foreignkey')
        batch_op.drop_column('user_id')
        batch_op.drop_column('name')

    with op.batch_alter_table('reason_for_rejection', schema=None) as batch_op:
        batch_op.add_column(sa.Column('plant_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('plant_name', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('price', sa.Float(), nullable=False))
        batch_op.create_foreign_key(None, 'planted_crops', ['plant_id'], ['plant_id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('reason_for_rejection', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('price')
        batch_op.drop_column('plant_name')
        batch_op.drop_column('plant_id')

    with op.batch_alter_table('nutrient_controllers', schema=None) as batch_op:
        batch_op.add_column(sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.create_foreign_key('nutrient_controllers_user_id_fkey', 'users', ['user_id'], ['user_id'])
        batch_op.drop_column('plant_name')

    with op.batch_alter_table('inventory_logs', schema=None) as batch_op:
        batch_op.add_column(sa.Column('item', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('inventory_container_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('inventory_logs_inventory_container_id_fkey', 'inventory_container', ['inventory_container_id'], ['inventory_container_id'])
        batch_op.drop_column('user_id')
        batch_op.drop_column('inventory_id')

    with op.batch_alter_table('inventory_container_logs', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.alter_column('item',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
        batch_op.drop_column('user_id')

    with op.batch_alter_table('harvests', schema=None) as batch_op:
        batch_op.drop_column('price')
        batch_op.drop_column('plant_name')

    # ### end Alembic commands ###
