"""empty message

Revision ID: b61a86c37bea
Revises: b885e8a4ff9a
Create Date: 2025-04-25 01:16:56.285447

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b61a86c37bea'
down_revision = 'b885e8a4ff9a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('inventory', schema=None) as batch_op:
        batch_op.alter_column('total_price',
               existing_type=sa.INTEGER(),
               type_=sa.Float(),
               existing_nullable=False)
        batch_op.alter_column('max_total_ml',
               existing_type=sa.INTEGER(),
               type_=sa.Float(),
               nullable=True)
        batch_op.alter_column('price',
               existing_type=sa.INTEGER(),
               type_=sa.Float(),
               existing_nullable=False)
        batch_op.drop_constraint('inventory_greenhouse_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('inventory_inventory_container_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'inventory_container', ['inventory_container_id'], ['inventory_container_id'], ondelete='SET NULL')
        batch_op.create_foreign_key(None, 'greenhouses', ['greenhouse_id'], ['greenhouse_id'], ondelete='CASCADE')

    with op.batch_alter_table('inventory_container', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['greenhouse_id'])
        batch_op.drop_constraint('inventory_container_greenhouse_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'greenhouses', ['greenhouse_id'], ['greenhouse_id'], ondelete='CASCADE')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('inventory_container', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('inventory_container_greenhouse_id_fkey', 'greenhouses', ['greenhouse_id'], ['greenhouse_id'])
        batch_op.drop_constraint(None, type_='unique')

    with op.batch_alter_table('inventory', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('inventory_inventory_container_id_fkey', 'inventory_container', ['inventory_container_id'], ['inventory_container_id'])
        batch_op.create_foreign_key('inventory_greenhouse_id_fkey', 'greenhouses', ['greenhouse_id'], ['greenhouse_id'])
        batch_op.alter_column('price',
               existing_type=sa.Float(),
               type_=sa.INTEGER(),
               existing_nullable=False)
        batch_op.alter_column('max_total_ml',
               existing_type=sa.Float(),
               type_=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('total_price',
               existing_type=sa.Float(),
               type_=sa.INTEGER(),
               existing_nullable=False)

    # ### end Alembic commands ###
