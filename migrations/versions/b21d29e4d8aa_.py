"""empty message

Revision ID: b21d29e4d8aa
Revises: b61a86c37bea
Create Date: 2025-04-25 01:28:10.145884

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b21d29e4d8aa'
down_revision = 'b61a86c37bea'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('analytics', schema=None) as batch_op:
        batch_op.drop_constraint('analytics_greenhouse_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'greenhouses', ['greenhouse_id'], ['greenhouse_id'], ondelete='CASCADE')

    with op.batch_alter_table('greenhouses', schema=None) as batch_op:
        batch_op.drop_constraint('greenhouses_user_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['user_id'], ondelete='CASCADE')

    with op.batch_alter_table('hardware_components', schema=None) as batch_op:
        batch_op.drop_constraint('hardware_components_greenhouse_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('hardware_components_user_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'greenhouses', ['greenhouse_id'], ['greenhouse_id'], ondelete='CASCADE')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['user_id'], ondelete='CASCADE')

    with op.batch_alter_table('hardware_current_status', schema=None) as batch_op:
        batch_op.alter_column('component_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('greenhouse_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.create_unique_constraint(None, ['component_id'])
        batch_op.drop_constraint('hardware_current_status_greenhouse_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('hardware_current_status_component_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'hardware_components', ['component_id'], ['component_id'], ondelete='CASCADE')
        batch_op.create_foreign_key(None, 'greenhouses', ['greenhouse_id'], ['greenhouse_id'], ondelete='CASCADE')

    with op.batch_alter_table('maintenance', schema=None) as batch_op:
        batch_op.drop_constraint('maintenance_user_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['user_id'], ondelete='CASCADE')

    with op.batch_alter_table('nutrient_controllers', schema=None) as batch_op:
        batch_op.drop_constraint('nutrient_controllers_plant_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('nutrient_controllers_greenhouse_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'planted_crops', ['plant_id'], ['plant_id'], ondelete='CASCADE')
        batch_op.create_foreign_key(None, 'greenhouses', ['greenhouse_id'], ['greenhouse_id'], ondelete='CASCADE')

    with op.batch_alter_table('plant_growth', schema=None) as batch_op:
        batch_op.drop_constraint('plant_growth_greenhouse_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'greenhouses', ['greenhouse_id'], ['greenhouse_id'], ondelete='CASCADE')

    with op.batch_alter_table('planted_crops', schema=None) as batch_op:
        batch_op.drop_constraint('planted_crops_greenhouse_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'greenhouses', ['greenhouse_id'], ['greenhouse_id'], ondelete='CASCADE')

    with op.batch_alter_table('reason_for_rejection', schema=None) as batch_op:
        batch_op.drop_constraint('reason_for_rejection_plant_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('reason_for_rejection_greenhouse_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'greenhouses', ['greenhouse_id'], ['greenhouse_id'], ondelete='CASCADE')
        batch_op.create_foreign_key(None, 'planted_crops', ['plant_id'], ['plant_id'], ondelete='CASCADE')

    with op.batch_alter_table('sales', schema=None) as batch_op:
        batch_op.drop_constraint('sales_user_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('sales_plant_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'planted_crops', ['plant_id'], ['plant_id'], ondelete='CASCADE')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['user_id'], ondelete='CASCADE')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('sales', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('sales_plant_id_fkey', 'planted_crops', ['plant_id'], ['plant_id'])
        batch_op.create_foreign_key('sales_user_id_fkey', 'users', ['user_id'], ['user_id'])

    with op.batch_alter_table('reason_for_rejection', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('reason_for_rejection_greenhouse_id_fkey', 'greenhouses', ['greenhouse_id'], ['greenhouse_id'])
        batch_op.create_foreign_key('reason_for_rejection_plant_id_fkey', 'planted_crops', ['plant_id'], ['plant_id'])

    with op.batch_alter_table('planted_crops', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('planted_crops_greenhouse_id_fkey', 'greenhouses', ['greenhouse_id'], ['greenhouse_id'])

    with op.batch_alter_table('plant_growth', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('plant_growth_greenhouse_id_fkey', 'greenhouses', ['greenhouse_id'], ['greenhouse_id'])

    with op.batch_alter_table('nutrient_controllers', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('nutrient_controllers_greenhouse_id_fkey', 'greenhouses', ['greenhouse_id'], ['greenhouse_id'])
        batch_op.create_foreign_key('nutrient_controllers_plant_id_fkey', 'planted_crops', ['plant_id'], ['plant_id'])

    with op.batch_alter_table('maintenance', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('maintenance_user_id_fkey', 'users', ['user_id'], ['user_id'])

    with op.batch_alter_table('hardware_current_status', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('hardware_current_status_component_id_fkey', 'hardware_components', ['component_id'], ['component_id'])
        batch_op.create_foreign_key('hardware_current_status_greenhouse_id_fkey', 'greenhouses', ['greenhouse_id'], ['greenhouse_id'])
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('greenhouse_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('component_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('hardware_components', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('hardware_components_user_id_fkey', 'users', ['user_id'], ['user_id'])
        batch_op.create_foreign_key('hardware_components_greenhouse_id_fkey', 'greenhouses', ['greenhouse_id'], ['greenhouse_id'])

    with op.batch_alter_table('greenhouses', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('greenhouses_user_id_fkey', 'users', ['user_id'], ['user_id'])

    with op.batch_alter_table('analytics', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('analytics_greenhouse_id_fkey', 'greenhouses', ['greenhouse_id'], ['greenhouse_id'])

    # ### end Alembic commands ###
